{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar UINT8_MAX = require( '@stdlib/constants-uint8-max' );\nvar UINT16_MAX = require( '@stdlib/constants-uint16-max' );\nvar UINT32_MAX = require( '@stdlib/constants-uint32-max' );\n\n\n// MAIN //\n\n/**\n* Returns the minimum array data type for storing a provided unsigned integer value.\n*\n* @param {uinteger} value - scalar value\n* @returns {string} array data type\n*\n* @example\n* var dt = minUnsignedIntegerDataType( 9999 );\n* // returns 'uint16'\n*\n* @example\n* var dt = minUnsignedIntegerDataType( 3 );\n* // returns 'uint8'\n*/\nfunction minUnsignedIntegerDataType( value ) { // eslint-disable-line id-length\n\tif ( value <= UINT8_MAX ) {\n\t\treturn 'uint8';\n\t}\n\tif ( value <= UINT16_MAX ) {\n\t\treturn 'uint16';\n\t}\n\tif ( value <= UINT32_MAX ) {\n\t\treturn 'uint32';\n\t}\n\treturn 'float64';\n}\n\n\n// EXPORTS //\n\nmodule.exports = minUnsignedIntegerDataType;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine the minimum array data type for storing a provided unsigned integer value.\n*\n* @module @stdlib/array-base-min-unsigned-integer-dtype\n*\n* @example\n* var minUnsignedIntegerDataType = require( '@stdlib/array-base-min-unsigned-integer-dtype' );\n*\n* var dt = minUnsignedIntegerDataType( 1280 );\n* // returns 'uint16'\n*\n* dt = minUnsignedIntegerDataType( 3 );\n* // returns 'uint8'\n*/\n\n// MODULES //\n\nvar minUnsignedIntegerDataType = require( './main.js' ); // eslint-disable-line id-length\n\n\n// EXPORTS //\n\nmodule.exports = minUnsignedIntegerDataType;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAY,QAAS,6BAA8B,EACnDC,EAAa,QAAS,8BAA+B,EACrDC,EAAa,QAAS,8BAA+B,EAmBzD,SAASC,EAA4BC,EAAQ,CAC5C,OAAKA,GAASJ,EACN,QAEHI,GAASH,EACN,SAEHG,GAASF,EACN,SAED,SACR,CAKAH,EAAO,QAAUI,ICtBjB,IAAIE,EAA6B,IAKjC,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "UINT8_MAX", "UINT16_MAX", "UINT32_MAX", "minUnsignedIntegerDataType", "value", "minUnsignedIntegerDataType"]
}
